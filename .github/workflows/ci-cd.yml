name: Deploy to ECR

on:
 
  push:
    branches: 
    - feature/johnpaul 
    - develop
    - master

jobs:
  BuildImage:
    runs-on: ubuntu-latest

    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-north-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: 715433393979.dkr.ecr.eu-north-1.amazonaws.com        ##${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: tcoc-frontend
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
        
        
 # Deployment:
 #   needs: BuildImage
 #   runs-on: ubuntu-latest
 #   steps:
 #     - name: Checkout Code
 #       uses: actions/checkout@v3
 #     - name: Install AWS CLI and kubectl
 #       run: |
 #         sudo apt-get update && sudo apt-get install -y awscli
 #         curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
 #         chmod +x ./kubectl
 #         sudo mv ./kubectl /usr/local/bin/kubectl
     # - name: Authenticate with EKS cluster
     #   id: aws-eks-auth
     #   uses: aws-actions/amazon-ecr-login@v1
     #   with:
     #    region: eu-north-1
     #    access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
     #    secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  
     # - name: Set Kubernetes context
     #   run: |
     #     aws eks update-kubeconfig --name TCOC-CLUSTER --region eu-north-1
     # - name: Deploy to EKS cluster
     #   run: |
     #      kubectl apply -f /manifests
